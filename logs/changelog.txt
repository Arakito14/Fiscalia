/*--------------------------------------------Inicio-----------------------------------------*/
All notable changes made to our project will be represented here, this include records as bug fixes, new features and so on.
/*----------------------------------------------------------------------------------------*/
/*v1.14*/

FIX

- Metodo Eliminar Fiscal

- Error Visual ":" a resultado

- No se puede eliminar causa, si no hay un fiscal encargado

- Al eliminar un Fiscal encargado de una causa, y luego mostrar causas por pantalla se mostraba un error al no haber un Fiscal encargado para la causa


Agregado

- Metodo Eliminar Procdemiento

- Sobrecarga de metodo

- Agregado sobrecarga de metodo en clase "Fiscal.java", filtro de busqueda para Fiscales, estaba pensando esto se puede aplicar para todo el programa, en revisiones finales, creo que lo mejor es hacer este filtro de busqueda uno mas general (cada entidad con su atributo de busqueda), y también reducir el número de Clases a 2 o 3 de ser posible, con la clase madre (Fiscalia.java) y uno o mas clases de apoyo.

- Es posible mejorar esto ultimo, con una aplicación diferente, estuve leyendo un sitio que explica como se puede y deben abusar los metodos de sobrecarga (https://stackoverflow.com/questions/248222/method-overloading-can-you-overuse-it)

- Voy a continuar mañana en esto, aún estoy investigando como iterrar y mostrar por pantalla

- Added un archivo csv vacio, "vacio.csv"


Clase Fiscal

- Eliminado import Hashtable no usado


Clase Fiscalia

- Eliminado import ArrayList, Map y Set no usados

- Eliminado valor de variable opcion, ya que es redundante:

"It means the value is never used (not the variable as a whole). You might initialise the variable to some value, but change the value in the variable before it is read, thus the initialisation is redundant."

- Modificación en metodo mostrarFiscales()

for (Map.Entry<String, Fiscal> entry : fiscales.entrySet()) {

fiscales.entrySet().stream().map(entry -> entry.getValue()).map(aux -> {

- Modificación en metodo eliminarFiscal()

for (Map.Entry<String,Causa> entry : causas.entrySet()) {

causas.entrySet().stream().map(entry -> entry.getValue()).forEachOrdered(aux -> {

- Modificación en metodo mostrarCausas()

for (Map.Entry<String, Causa> entry : causas.entrySet()) {

causas.entrySet().stream().map(entry -> entry.getValue()).map(aux -> {

- Modificación en metodo mostrarCausas(HashMap<String,Causa>causas):

for (Map.Entry<String, Causa> entry : causas.entrySet()) {

causas.entrySet().stream().map(entry -> entry.getValue()).map(aux -> {


Clase Main

- Eliminado import Map no usado

- Eliminado valor de variable opcion, ya que es redundante:

"It means the value is never used (not the variable as a whole). You might initialise the variable to some value, but change the value in the variable before it is read, thus the initialisation is redundant."

- Modificado metodo leerFiscales (HashMap<String,Fiscal>fiscales)

Scanner lector= new Scanner(archivo);

try (Scanner lector = new Scanner(archivo)) {

- Modificado metodo leerCausas (HashMap<String,Causa>causas,HashMap<String,Fiscal> fiscales)

Scanner lector= new Scanner(archivo);

try (Scanner lector = new Scanner(archivo)) {


Clase Causa

- Eliminado import Map no usado

- Modificado metodo asignarFiscal(HashMap<String,Fiscal> fiscales, Causa asignada)

for (Map.Entry<String, Fiscal> entry : fiscales.entrySet()) {

fiscales.entrySet().stream().map(entry -> entry.getValue()).filter(aux -> (aux.getEspecialidad().equals(tipoCaso))).map(aux -> {


Codigo testeado en Netbeans IDE 12.3
/*----------------------------------------------------------------------------------------*/
/*V1.15*/

- Caso de excepción en Distrito

- Caso de excepción en Asignar Fiscal con RUT

- Archivos csv, eliminado simbolos especiales y espacios extras

- Modificado clase "Fiscal.java" para acoplarse con formato de EasyUML (Simbolos especiales removidos "contraseña", "é")

- Removed import Map, Iterator y Stream.collector en clas Fiscal.java.

- Removed Private String dis.str en clase Fiscal, por no uso. 

- Documentacion UML, Mapa Conceptual y Reporte, agregados a .gitnore.

- Actualizado "README.md" con instrucciones basicas de proyecto.

- Archivo "update.logs" añadido a "Documentos/" que contendra las revisiones y sus logs.

- Archivo "codeLibrary.txt" añadido a "Documentos/" que contendra algunos ejemplos de codigos (para reusar), tips varios y mas.

- Añadido "Filtro de Busqueda" con sobrecarga en "Fiscal.java" para buscar cada Fiscal con el atributo pedido.

- Metodo de Verificación para RUT y Distrito, que comprueba la validez del input.


Codigo testeado en Netbeans IDE 12.3
/*----------------------------------------------------------------------------------------*/
/*V1.16*/

- Al cerrar programa se genera reporte de fiscales con las tres colecciones anidadas

- Archivo UML actualizado

- Añadido changelogs, issuelogs, TODO y codelogs a documentación

Codigo testeado en Netbeans IDE 12.3
/*----------------------------------------------------------------------------------------*/
/*V2.0*/

> Verificadores <
Verificadores globales en Fiscalia
Opcion para retornar al menú

> General <
Metodo Mostrar();
Metodo modificarProcedimiento()
Metodo eliminarProcedimiento()
Formato.java con overrides e interfaz
Filtro de Busqueda con overrides

> Excepcion a modificarProcedimiento()
FIXED mostrarProcedimiento() verificación
Tenía problemas en caso de no existir procedimiento

> nuevoProcedimiento (Causa buscar)
Agregado verificacion para que no se caiga

> ProyectoFiscalia.java <
Se borraron los mapas extras, se formateo y optimizo

> Formato.java <
Interfaz para formato general de codigo
Añadidos varios formatos diferentes para uso general
Override de metodos de verificacion

> Fiscal.java <
Formato mejorado y limpio

> Fiscalia.java <
Implementacion de Formato.java y Especialidad.java
Clase padre de Fiscal.java & Causa.java
Metodo de clases abstractas de Causa y hijas
Menu de Filtro de Busqueda con Overrides
Verificaciones
Formato mejorado y limpio
/*----------------------------------------------------------------------------------------*/
/*V2.1_FIX*/

Nuevo
> Añadido reporte 4 y UML actualizado
> Añadido Readme.md actualizado
> Filled some code on Causa's children methods
/*----------------------------------------------------------------------------------------*/
/*V2.2*/

> New
Removed public HashMap fiscaless, era usado para testeado.
Interfaces cambiadas a Public
Del reporte solo falta la parte 2.3, 3 y 4.1
Patron RUT, reconocimiento K
Patron Fecha
Updated Formatos Generales de Interfaces
Generación de Reporte en Menú
Filtro de Busqueda en dos colecciones y con los criterios correspondientes
EPB.2 Implementacion de al menos 3 ventanas gráficas(GUIs en AWT o SWING):1 ventana de menú, 1 ventana de agregar elemento y 1 ventana de listar elementos.
EPB.3 Encapsulamiento y principios OO.
Packages Main, Ventanas e Interfaces
Causa como Clase Abstracta
Cambio en codigo "eliminarCausa()"
Updated Reporte Parte B
Agregado Diagrama UML con distintas versiones para nuestros packages
/*--------------------------------------------FIN-----------------------------------------*/
